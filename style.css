/* Global Theme */

:root {
    --maincolor: rgb(45, 38, 53);
    --seccolor: rgb(255, 255, 255);
    --shadecolor: rgba(0, 0, 0, 0.15);

}

/* General Flex & Grid Formatting */

body {
    background-color: var(--maincolor);
    color: var(--seccolor);
    font-family: "Verdana", sans-serif;
    margin: 0;
    padding: 0;
    min-height: 100vh;
    display: flex;
    justify-content: center;
    align-items: center;
    text-align: center;
}

.container {
    width: 98vw;
    height: 96vh;
    display: grid;
    grid-template-columns: 400px 1fr;
    grid-template-rows: auto auto 1fr;
    gap: 20px;
}

.box {
    background-color: var(--shadecolor);
    border-radius: 20px;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.35);
    padding: 15px 25px 15px 25px;
    overflow: auto;
    position: relative;
}

.top-left {
    grid-column: 1 / 2;
    grid-row: 1 / 2;
    display: flex;
    justify-content: center;
    align-items: center;
}

.top-right {
    grid-column: 2 / 3;
    grid-row: 1 / 2;
    padding: 0%;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
}

.center-left {

    grid-column: 1 / 2;
    grid-row: 2 / 3;
}

.bottom-left {
    grid-column: 1 / 2;
    grid-row: 3 / 3;
}

.bottom-right {
    grid-column: 2 / 3;
    grid-row-start: 2;
    grid-row-end: span 2;
    background-color: transparent;
    border: 3px dotted var(--seccolor);
    box-shadow: none;
    padding-top: 0px;
    overflow: hidden;
}

/* General Text Formatting */

h1,
h2 {
    margin: 0;
    color: var(--seccolor)
}

hr {
    border: 0;
    border-top: 3px dotted var(--seccolor);
}

h3 {
    line-height: 0%;
}

ul {
    list-style-type: none;
    padding-left: 0;
}

li ul {
    padding-left: 20px;
}

a {
    color: var(--seccolor);
    text-decoration: none;
}

/* big shifting results thing u can rename this. kinda placeholder. do what you want with it. idk if this is the way youre supposed to do a reactive slide display thing but youd have to change the 50%s*/

.resultbar {
    position: absolute;
    min-width: 98%;
    height: 40px;
    border-radius: 15px;
    border: black 3px solid;
    display: flex;
    justify-content: center;
    transition: 2s;
    overflow: hidden;
    box-shadow: 0 5px 5px rgba(0, 0, 0, 0.35);
}

.resultcenterline {
    position: absolute;
    min-width: 0px;
    min-height: 50px;
    border-radius: 1px;
    border: rgba(255, 255, 255, 0.5) 2px solid;
    display: flex;
    transition: 2s;
    z-index: 5;
}

.color-segment:nth-child(1) { background-color: rgb(0, 12, 65); transition: 2s;} /* Example color */
.color-segment:nth-child(2) { background-color: rgb(19, 25, 109); transition: 2s;}
.color-segment:nth-child(3) { background-color: rgb(24, 31, 121); transition: 2s;}
.color-segment:nth-child(4) { background-color: rgb(41, 48, 141); transition: 2s;}
.color-segment:nth-child(5) { background-color: rgb(63, 71, 167); transition: 2s;}
.color-segment:nth-child(6) { background-color: rgb(95, 102, 197); transition: 2s;}
.color-segment:nth-child(7) { background-color: rgb(129, 135, 216); transition: 2s;}
.color-segment:nth-child(8) { background-color: rgb(173, 178, 242); transition: 2s;}
.color-segment:nth-child(9) { background-color: rgb(242, 173, 173); transition: 2s;}
.color-segment:nth-child(10) { background-color: rgb(215, 128, 128); transition: 2s;}
.color-segment:nth-child(11) { background-color: rgb(195, 93, 93); transition: 2s;} 
.color-segment:nth-child(12) { background-color: rgb(163, 59, 59); transition: 2s;}
.color-segment:nth-child(13) { background-color: rgb(137, 37, 37); transition: 2s;}
.color-segment:nth-child(14) { background-color: rgb(121, 24, 24); transition: 2s;}
.color-segment:nth-child(15) { background-color: rgb(105, 15, 15); transition: 2s;}
.color-segment:nth-child(16) { background-color: rgb(65, 12, 0); transition: 2s;}

.Barcountbox {
    display: flex;
    position: absolute;
    justify-content: space-between;
    width: 100%;
    height: 100%;
}

.DemBarcount {
    padding: 5px 30px;
    text-align: left;
    z-index: 5;
    position: relative;

}

.RepBarcount {
    position: relative;
    text-align: right;
    z-index: 5;
    padding: 5px 30px;
    
}

/*Background Animated*/
.stripe {
    background-image:
        repeating-linear-gradient(-45deg,
            transparent,
            transparent 1rem,
            #00000009 1rem,
            #0000000a 2rem);
    background-size: 200% 200%;
    animation: barberpole 100s linear infinite;
}

@keyframes barberpole {
    100% {
        background-position: 100% 100%;
    }
}

/* Buttons */

button {
    outline: 0;
    border: 0;
    cursor: pointer;
    background-color: var(--maincolor);
    border-radius: 10px;
    box-shadow:
        0px 5px 5px rgba(0, 0, 0, 0.15);
    padding: 10px 15%;
    margin: 5px;
    color: var(--seccolor);
    font-family: "Verdana", sans-serif;
}

button:hover {
    cursor: pointer;
    -webkit-text-fill-color: rgba(255, 255, 255, 0);
    text-shadow: 0 3px 0 var(--seccolor);
    box-shadow:
        0px 5px 10px rgba(0, 0, 0, 0.3) inset;
}

button:active {
    cursor: pointer;
    -webkit-text-fill-color: rgba(255, 255, 255, 0);
    text-shadow: 0 3px 0 var(--seccolor);
    box-shadow:
        0px 5px 10px rgba(0, 0, 0, 0.6) inset;
}

button.pressed {
    cursor: pointer;
    -webkit-text-fill-color: rgba(255, 255, 255, 0);
    text-shadow: 0 3px 0 var(--seccolor);
    box-shadow:
        0px 5px 10px rgba(0, 0, 0, 0.6) inset;
}

.buttonbox {
    margin-left: 5px;
    margin-top: 3px;
    position: absolute;
    top: 0;
    left: 0;
    z-index: 5;
    padding: 0;
    text-align: center;
    align-items: flex-start;
    align-self: start;
}

button.ZoomButton {
    align-items: flex-start;
    background-color: var(--shadecolor);
    border-radius: 10px;
    box-shadow:
        0px 5px 5px rgba(0, 0, 0, 0.35);
    width: 45px;
    height: 45px;
    margin: 5px;
    padding: 0px;
}

button.ElectionType {
    padding: 10px 15px;
    margin: 5px 3px;
}

button.statecall {
    margin-top: 0;
    padding: 10px;
}

input {
    outline: 0;
    border: 0;
    cursor: pointer;
    background-color: var(--maincolor);
    border-radius: 10px;
    box-shadow:
        0px 5px 5px rgba(0, 0, 0, 0.15);
    padding: 10px;
    margin: 0px;
    color: var(--seccolor);
    font-family: "Verdana", sans-serif;
    font-size: 24px;
    line-height: 0%;
    transform: translateY(3px);
}

select {
    outline: 0;
    border: 0;
    cursor: pointer;
    background-color: var(--maincolor);
    border-radius: 10px;
    box-shadow:
        0px 5px 5px rgba(0, 0, 0, 0.15);
    padding: 10px;
    margin: 5px;
    color: var(--seccolor);
    font-family: "Verdana", sans-serif;
    font-size: 18px;
}

/* Tooltip container */
.tooltip {
    position: relative;
    display: inline-block;
}

/* Tooltip text */
.tooltip .tooltiptext {
    visibility: hidden;
    width: 120px;
    background-color: rgba(0, 0, 0, 0.65);
    color: var(--seccolor);
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 1;
    top: -5px;
    left: 105%;
}

/* Show the tooltip text when you mouse over the tooltip container */
.tooltip:hover .tooltiptext {
    visibility: visible;
}

/* State paths */

svg {
    scale: 100%;
    position: relative;
}

path {
    fill: var(--shadecolor);
    stroke: black;
    transition: 0.5s;
    position: absolute;
    stroke-width: 1.5;
}

/* Pres Paths */
.pres-model path.hovered,
.pres-model path:hover {
    stroke: white;
    stroke-width: 3px;
    transform: translateY(-5px);
    filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.5));
}

/* House Paths */
.house-model path {
    stroke-width: 0.5;
}

.house-model path.hovered,
.house-model path:hover {
    stroke: white;
    stroke-width: 0.5px;
    filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.5));
}

/* Senate Paths */
.senate-model path.hovered,
.senate-model path:hover {
    stroke: white;
    stroke-width: 3px;
    filter: drop-shadow(0px 5px 5px rgba(0, 0, 0, 0.5));
}



/* Details Pane */

#details-box {
    text-align: left;
    padding: 1rem;
    border-radius: 10px;
    font-size: 24px;
    position: fixed;
    background-color: rgba(0, 0, 0, 0.5);
    color: white;
    font-family: Verdana, sans-serif;
    width: fit-content;
    transform: translateX(-50%);
    transition: opacity .4s ease;
    z-index: 1;
    white-space: pre;
}

/* Layout Responsive */

@media screen and (max-width: 960px) {
    body {
        align-items: flex-start;
        padding: 20px;
        box-sizing: border-box;
    }

    .container {
        width: 100%;
        height: auto;
        display: flex;
        flex-direction: column;
        text-align: center;
        gap: 20px;
        margin: 0;
        padding: 0;
    }

    .box {
        width: 100%;
        box-sizing: border-box;
    }

    .top-left,
    .top-right,
    .bottom-left,
    .bottom-right {
        grid-column: auto;
        grid-row: auto;
    }

    .top-left {
        order: 1;
    }

    .center-left {
        order: 2;
    }

    .top-right {
        order: 3;
    }

    .bottom-right {
        order: 4;
        overflow: scroll;
    }

    .bottom-left {
        order: 5;
    }

    #details-box {
        font-size: 14px;
    }
}

@media screen and (max-width: 650px) {
    button {
        padding: 10px 12px;
    }


}

/* Slider */
.slidecontainer {
    width: 100%;
}

.slider {
    -webkit-appearance: none;
    appearance: none;
    width: 100%;
    height: 25px;
    opacity: 0.7;
    -webkit-transition: .2s;
    transition: opacity .2s;
    background: #1a2436;
}

#myRange {
    background: #c52424;
}

#slidervalue {
    color: blue;
    font-weight: bold;
}
